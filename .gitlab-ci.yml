stages:
  - build
  - dockerize

build:
  stage: build
  image: ubuntu:latest
  services:
    - rabbitmq:latest
  variables:
    AMQP_URL: "rabbitmq"
    AMQP_USER: guest
    AMQP_PWD: guest
    DOCKER_HOST: "tcp://docker:2375"
    KAFKA_HOST: localhost:9092
  script:
    - apt-get update
    - apt-get install -y wget nodejs npm default-jre-headless
    - wget http://ftp.heanet.ie/mirrors/www.apache.org/dist/kafka/2.1.0/kafka_2.11-2.1.0.tgz
    - tar -xzf kafka_2.11-2.1.0.tgz
    - ls -ltra kafka_2.11-2.1.0/bin
    - nohup kafka_2.11-2.1.0/bin/zookeeper-server-start.sh kafka_2.11-2.1.0/config/zookeeper.properties > /dev/null 2>&1 &
    - sleep 2
    - nohup kafka_2.11-2.1.0/bin/kafka-server-start.sh kafka_2.11-2.1.0/config/server.properties > /dev/null 2>&1 &
    - sleep 5
    - kafka_2.11-2.1.0/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic unicron-tasks-log
    - npm install -g yarn
    - yarn
    - yarn test
    - yarn build
    - kafka_2.11-2.1.0/bin/kafka-server-stop.sh
    - kafka_2.11-2.1.0/bin/zookeeper-server-stop.sh
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - package.json
      - .yarnclean
      - yarn.lock
      - Dockerfile
      - dist
      - .dockerignore

dockerize:
  stage: dockerize
  image: docker:latest
  when: on_success
  services:
    - docker:dind
  variables:
    GIT_STRATEGY: none
  only:
    - master
  script:
    - ls -ltr
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN registry.gitlab.com/unicron-lab
    - docker build -t registry.gitlab.com/unicron-lab/unicron-graphql:$CI_JOB_ID .
    - docker push registry.gitlab.com/unicron-lab/unicron-graphql
